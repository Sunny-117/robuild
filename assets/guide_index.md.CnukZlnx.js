import{_ as i,c as s,o as t,ag as l}from"./chunks/framework.CYsQgUI_.js";const c=JSON.parse('{"title":"介绍","description":"","frontmatter":{},"headers":[],"relativePath":"guide/index.md","filePath":"guide/index.md"}'),e={name:"guide/index.md"};function n(r,a,d,h,p,o){return t(),s("div",null,[...a[0]||(a[0]=[l(`<h1 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h1><p>robuild 是一个现代化的 TypeScript/ESM 包构建工具，专注于提供简单、快速、可靠的构建体验。</p><h2 id="什么是-robuild" tabindex="-1">什么是 robuild？ <a class="header-anchor" href="#什么是-robuild" aria-label="Permalink to &quot;什么是 robuild？&quot;">​</a></h2><p>robuild 是一个零配置的 ESM/TypeScript 包构建器，它基于以下核心技术构建：</p><ul><li><strong><a href="https://oxc.rs/" target="_blank" rel="noreferrer">oxc</a></strong>: 用 Rust 编写的极速 JavaScript/TypeScript 解析器和转换器</li><li><strong><a href="https://rolldown.rs/" target="_blank" rel="noreferrer">rolldown</a></strong>: 高性能的 JavaScript 打包器，替代 Rollup</li><li><strong><a href="https://github.com/sxzz/rolldown-plugin-dts" target="_blank" rel="noreferrer">rolldown-plugin-dts</a></strong>: TypeScript 声明文件生成插件</li></ul><h2 id="核心特性" tabindex="-1">核心特性 <a class="header-anchor" href="#核心特性" aria-label="Permalink to &quot;核心特性&quot;">​</a></h2><h3 id="⚡-极速构建" tabindex="-1">⚡ 极速构建 <a class="header-anchor" href="#⚡-极速构建" aria-label="Permalink to &quot;⚡ 极速构建&quot;">​</a></h3><ul><li>基于 Rust 编写的 oxc 解析器，解析速度比 Babel 快 10-100 倍</li><li>rolldown 打包器性能优异，构建速度显著提升</li><li>智能缓存机制，避免重复构建</li></ul><h3 id="🎯-零配置" tabindex="-1">🎯 零配置 <a class="header-anchor" href="#🎯-零配置" aria-label="Permalink to &quot;🎯 零配置&quot;">​</a></h3><ul><li>开箱即用，无需复杂配置</li><li>自动检测项目结构和依赖</li><li>智能默认配置，满足大部分使用场景</li></ul><h3 id="📦-双模式构建" tabindex="-1">📦 双模式构建 <a class="header-anchor" href="#📦-双模式构建" aria-label="Permalink to &quot;📦 双模式构建&quot;">​</a></h3><ul><li><strong>Bundle 模式</strong>: 将多个文件打包成单个文件，适合库发布</li><li><strong>Transform 模式</strong>: 转换目录中的所有文件，保持文件结构</li></ul><h3 id="🔧-typescript-原生支持" tabindex="-1">🔧 TypeScript 原生支持 <a class="header-anchor" href="#🔧-typescript-原生支持" aria-label="Permalink to &quot;🔧 TypeScript 原生支持&quot;">​</a></h3><ul><li>内置 TypeScript 支持，无需额外配置</li><li>自动生成类型声明文件 (.d.ts)</li><li>支持最新的 TypeScript 特性</li></ul><h3 id="🚀-stub-模式" tabindex="-1">🚀 Stub 模式 <a class="header-anchor" href="#🚀-stub-模式" aria-label="Permalink to &quot;🚀 Stub 模式&quot;">​</a></h3><ul><li>开发时快速链接源码，无需重新构建</li><li>提升开发体验，支持热重载</li><li>支持多种运行时环境</li></ul><h3 id="👀-监听模式" tabindex="-1">👀 监听模式 <a class="header-anchor" href="#👀-监听模式" aria-label="Permalink to &quot;👀 监听模式&quot;">​</a></h3><ul><li>文件变化时自动重新构建</li><li>智能文件检测和防抖机制</li><li>错误恢复和清晰的状态反馈</li></ul><h2 id="使用场景" tabindex="-1">使用场景 <a class="header-anchor" href="#使用场景" aria-label="Permalink to &quot;使用场景&quot;">​</a></h2><h3 id="库开发" tabindex="-1">库开发 <a class="header-anchor" href="#库开发" aria-label="Permalink to &quot;库开发&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 构建库文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> robuild</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./src/index.ts</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="工具开发" tabindex="-1">工具开发 <a class="header-anchor" href="#工具开发" aria-label="Permalink to &quot;工具开发&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 构建 CLI 工具</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> robuild</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./src/cli.ts</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="运行时文件" tabindex="-1">运行时文件 <a class="header-anchor" href="#运行时文件" aria-label="Permalink to &quot;运行时文件&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 转换运行时文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> robuild</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./src/runtime/:./dist/runtime</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="开发模式" tabindex="-1">开发模式 <a class="header-anchor" href="#开发模式" aria-label="Permalink to &quot;开发模式&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 使用 stub 模式快速开发</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> robuild</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./src/index.ts</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --stub</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 使用监听模式自动重建</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> robuild</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./src/index.ts</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --watch</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="与其他工具对比" tabindex="-1">与其他工具对比 <a class="header-anchor" href="#与其他工具对比" aria-label="Permalink to &quot;与其他工具对比&quot;">​</a></h2><table tabindex="0"><thead><tr><th>特性</th><th>robuild</th><th>unbuild</th><th>tsup</th><th>rollup</th></tr></thead><tbody><tr><td>零配置</td><td>✅</td><td>✅</td><td>✅</td><td>❌</td></tr><tr><td>极速构建</td><td>✅</td><td>❌</td><td>❌</td><td>❌</td></tr><tr><td>ESM 原生</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td>TypeScript</td><td>✅</td><td>✅</td><td>✅</td><td>❌</td></tr><tr><td>Stub 模式</td><td>✅</td><td>❌</td><td>❌</td><td>❌</td></tr><tr><td>监听模式</td><td>✅</td><td>✅</td><td>✅</td><td>❌</td></tr></tbody></table><h2 id="技术栈" tabindex="-1">技术栈 <a class="header-anchor" href="#技术栈" aria-label="Permalink to &quot;技术栈&quot;">​</a></h2><p>robuild 的技术栈经过精心选择，确保性能和易用性：</p><ul><li><strong>oxc</strong>: 极速的 JavaScript/TypeScript 解析和转换</li><li><strong>rolldown</strong>: 高性能的 JavaScript 打包器</li><li><strong>exsolve</strong>: 智能的模块解析</li><li><strong>magic-string</strong>: 高效的源码操作</li><li><strong>consola</strong>: 美观的控制台输出</li></ul><h2 id="下一步" tabindex="-1">下一步 <a class="header-anchor" href="#下一步" aria-label="Permalink to &quot;下一步&quot;">​</a></h2><ul><li><a href="./getting-started.html">快速开始</a> - 安装和基本使用</li><li><a href="./cli.html">CLI 使用</a> - 命令行工具详解</li><li><a href="./configuration.html">配置</a> - 配置文件选项</li><li><a href="./build-modes.html">构建模式</a> - Bundle 和 Transform 模式详解</li><li><a href="./watch-mode.html">监听模式</a> - 开发时自动重建</li><li><a href="./stub-mode.html">Stub 模式</a> - 快速开发链接</li></ul>`,34)])])}const b=i(e,[["render",n]]);export{c as __pageData,b as default};
